import { Handler } from "@netlify/functions";
import { XummSdk } from "xumm-sdk";
import * as dotenv from "dotenv";

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
dotenv.config();

// –ü–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–µ–π XUMM –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const apiKey = process.env.XUMM_API_KEY;
const apiSecret = process.env.XUMM_API_SECRET;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è XUMM SDK —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API –∫–ª—é—á–µ–π
const xumm = new XummSdk(apiKey, apiSecret);

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Netlify Functions
const handler: Handler = async (event, context) => {
    console.log("üì© –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞...");

    try {
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è XUMM payload –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        console.log("üõ† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è XUMM payload...");

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è payload –¥–ª—è XUMM —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º TransactionType
        const payload = await xumm.payload.create({
            txjson: {
                TransactionType: "SignIn",  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ TransactionType
            },
            options: {
                return_url: {
                    app: "https://universe-in-touch.github.io", // –ú–æ–±–∏–ª—å–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
                },
                force_network: "MAINNET",  // –£–∫–∞–∑–∞–Ω–∏–µ —Å–µ—Ç–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä MAINNET
            },
            custom_meta: {
                instruction: "Welcome to the Universe In Touch!",  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            }
        });

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null –∏–ª–∏ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ payload
        if (!payload) {
            throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å payload –¥–ª—è XUMM.");
        }

        console.log("‚úÖ Payload —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:", payload);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ uuid –≤ –æ—Ç–≤–µ—Ç–µ
        const response = {
            statusCode: 200,
            headers: {
                "Access-Control-Allow-Origin": "*", // –†–∞–∑—Ä–µ—à–∞–µ—Ç –¥–æ—Å—Ç—É–ø —Å –ª—é–±—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
                "Access-Control-Allow-Headers": "Content-Type", // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ Content-Type
                "Access-Control-Allow-Methods": "GET, POST, OPTIONS", // –†–∞–∑—Ä–µ—à–∞–µ–º –º–µ—Ç–æ–¥—ã GET, POST, OPTIONS
            },
            body: JSON.stringify({ uuid: payload.uuid }), // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ uuid
        };

        return response; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–∏
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ XUMM payload:", error);

        // –û—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π
        const errorResponse = {
            statusCode: 500,
            headers: {
                "Access-Control-Allow-Origin": "*", // –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø —Å –ª—é–±—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            },
            body: JSON.stringify({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ XUMM payload" }),
        };

        return errorResponse; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π
    }
};

export { handler };
