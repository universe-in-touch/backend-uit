import { Handler } from "@netlify/functions";
import { XummSdk } from "xumm-sdk";
import * as dotenv from "dotenv";

dotenv.config();

const apiKey = process.env.XUMM_API_KEY;
const apiSecret = process.env.XUMM_API_SECRET;

const xumm = new XummSdk(apiKey, apiSecret);

const handler: Handler = async (event, context) => {
    console.log("üì© –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞...");

    try {
        // –°–æ–∑–¥–∞–Ω–∏–µ payload –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        console.log("üõ† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è XUMM payload...");
        const payload = await xumm.payload.create({ TransactionType: "SignIn" });

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null
        if (!payload) {
            throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å payload –¥–ª—è XUMM.");
        }

        console.log("‚úÖ Payload —Å–æ–∑–¥–∞–Ω:", payload);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ uuid
        const response = {
            statusCode: 200,
            headers: {
                "Access-Control-Allow-Origin": "*", // –†–∞–∑—Ä–µ—à–∞–µ—Ç CORS-–∑–∞–ø—Ä–æ—Å—ã
                "Access-Control-Allow-Headers": "Content-Type", // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
                "Access-Control-Allow-Methods": "GET, POST, OPTIONS", // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
            },
            body: JSON.stringify({ uuid: payload.uuid }), // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ uuid
        };

        return response; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è XUMM payload:", error);

        // –û—à–∏–±–∫–∞: —Ç–∏–ø—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ç–æ–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω—ã
        const errorResponse = {
            statusCode: 500,
            headers: {
                "Access-Control-Allow-Origin": "*", // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –æ—à–∏–±–∫–∏
            },
            body: JSON.stringify({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ XUMM payload" }),
        };

        return errorResponse; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ
    }
};

export { handler };
